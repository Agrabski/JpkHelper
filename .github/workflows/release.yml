name: Release

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:
    runs-on: ubuntu-latest  
    env:
      VERSION_TAG: JPKv0_0_9
      VERSION: '0.0.9'
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Create the app package
      run: dotnet publish JpkHelper -p:ApplicationVersion=${{ env.VERSION }} -p:ApplicationDisplayVersion=${{ env.VERSION }} -f net8.0 -o out -c Release -r win-x64

    - name: Zip artifact
      run: zip -r jpkhelper_${{ env.VERSION }}.zip out

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: JpkHelper
        path:  jpkhelper_${{ env.VERSION }}.zip
    - uses: mukunku/tag-exists-action@v1.6.0
      id: check-tag
      with: 
        tag: ${{ env.VERSION_TAG }}

    - uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: JPKHelper v.${{ env.VERSION }}
        tag_name: ${{ env.VERSION_TAG }}
      if: github.event_name != 'pull_request' && steps.check-tag.outputs.exists == 'false'
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      if: github.event_name != 'pull_request' && steps.check-tag.outputs.exists == 'false'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: jpkhelper_${{ env.VERSION }}.zip
        asset_name: jpkhelper_${{ env.VERSION }}.zip
        asset_content_type: application/vnd.rar
